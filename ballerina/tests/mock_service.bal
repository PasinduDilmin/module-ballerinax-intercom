// AUTO-GENERATED FILE. DO NOT MODIFY.
// This file is auto-generated by the Ballerina OpenAPI tool.

// Copyright (c) 2024, WSO2 LLC. (http://www.wso2.com).
//
// WSO2 LLC. licenses this file to you under the Apache License,
// Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

import ballerina/http;
import ballerina/log;


listener http:Listener httpListener = new (9090);

# The intercom API reference.
http:Service mockService = service object {
    # Delete an article
    #
    # + id - The unique identifier for the article which is given by Intercom.
    # + headers - Headers to be sent with the request 
    # + return - successful 
    resource isolated function delete articles/[int id](DeleteArticleHeaders headers = {}) returns deleted_article_object|error {
        return {"id": "51", "object": "article", "deleted": true};
    }

    # Delete a company
    #
    # + id - The unique identifier for the company which is given by Intercom
    # + headers - Headers to be sent with the request 
    # + return - Successful 
    resource isolated function delete companies/[string id](DeleteCompanyHeaders headers = {}) returns deleted_company_object|error {
        return {"id": "667d60848a68186f43bafd45", "object": "company", "deleted": true};
    }

    # Detach a contact from a company
    #
    # + contact_id - The unique identifier for the contact which is given by Intercom
    # + id - The unique identifier for the company which is given by Intercom
    # + headers - Headers to be sent with the request 
    # + return - Successful 
    resource isolated function delete contacts/[string contact_id]/companies/[string id](DetachContactFromACompanyHeaders headers = {}) returns company|error {
        return {"type": "company", "company_id": "1", "id": "667d60918a68186f43bafd80", "app_id": "this_is_an_id174_that_should_be_at_least_", "name": "company8", "remote_created_at": 1719492753, "created_at": 1719492753, "updated_at": 1719492753, "monthly_spend": 0, "session_count": 0, "user_count": 0, "tags": {"type": "tag.list", "tags": []}, "segments": {"type": "segment.list", "segments": []}, "plan": {}, "custom_attributes": {}};
    }

    # Remove subscription from a contact
    #
    # + contact_id - The unique identifier for the contact which is given by Intercom
    # + id - The unique identifier for the subscription type which is given by Intercom
    # + headers - Headers to be sent with the request 
    # + return - Successful 
    resource isolated function delete contacts/[string contact_id]/subscriptions/[string id](DetachSubscriptionTypeToContactHeaders headers = {}) returns subscription_type|error {
        return {"type": "subscription", "id": "124", "state": "live", "consent_type": "opt_in", "default_translation": {"name": "Newsletters", "description": "Lorem ipsum dolor sit amet", "locale": "en"}, "translations": [{"name": "Newsletters", "description": "Lorem ipsum dolor sit amet", "locale": "en"}], "content_types": ["sms_message"]};
    }

    # Remove tag from a contact
    #
    # + contact_id - The unique identifier for the contact which is given by Intercom
    # + id - The unique identifier for the tag which is given by Intercom
    # + headers - Headers to be sent with the request 
    # + return - successful 
    resource isolated function delete contacts/[string contact_id]/tags/[string id](DetachTagFromContactHeaders headers = {}) returns tag|error {
        return {"type": "tag", "id": "97", "name": "Manual tag"};
    }

    # Delete a contact
    #
    # + id - id
    # + headers - Headers to be sent with the request 
    # + return - successful 
    resource isolated function delete contacts/[string id](DeleteContactHeaders headers = {}) returns contact_deleted|error {
        return {"id": "667d60aa8a68186f43bafdba", "external_id": "70", "type": "contact", "deleted": true};
    }

    # Detach a contact from a group conversation
    #
    # + conversation_id - The identifier for the conversation as given by Intercom.
    # + contact_id - The identifier for the contact as given by Intercom.
    # + headers - Headers to be sent with the request 
    # + return - Detach a contact from a group conversation 
    resource isolated function delete conversations/[string conversation_id]/customers/[string contact_id](detach_contact_from_conversation_request payload, DetachContactFromConversationHeaders headers = {}) returns conversation|error {
        return {"customers": [{"type": "user", "id": "667d61228a68186f43bafe19"}]};
    }

    # Remove tag from a conversation
    #
    # + conversation_id - conversation_id
    # + id - id
    # + headers - Headers to be sent with the request 
    # + return - successful 
    resource isolated function delete conversations/[string conversation_id]/tags/[string id](tags_id_body payload, DetachTagFromConversationHeaders headers = {}) returns tag|error {
        return {"type": "tag", "id": "102", "name": "Manual tag"};
    }

    # Delete a collection
    #
    # + id - The unique identifier for the collection which is given by Intercom.
    # + headers - Headers to be sent with the request 
    # + return - successful 
    resource isolated function delete help_center/collections/[int id](DeleteCollectionHeaders headers = {}) returns deleted_collection_object|error {
        return {"id": "182", "object": "collection", "deleted": true};
    }

    # Delete a news item
    #
    # + id - The unique identifier for the news item which is given by Intercom.
    # + headers - Headers to be sent with the request 
    # + return - successful 
    resource isolated function delete news/news_items/[int id](DeleteNewsItemHeaders headers = {}) returns deleted_object|error {
        return {"id": "40", "object": "news-item", "deleted": true};
    }

    # Remove tag from a ticket
    #
    # + ticket_id - ticket_id
    # + id - The unique identifier for the tag which is given by Intercom
    # + headers - Headers to be sent with the request 
    # + return - successful 
    resource isolated function delete tickets/[string ticket_id]/tags/[string id](tags_id_body_1 payload, DetachTagFromTicketHeaders headers = {}) returns tag|error {
        return {"type": "tag", "id": "137", "name": "Manual tag"};
    }

    # List all admins
    #
    # + headers - Headers to be sent with the request 
    # + return - Successful response 
    resource isolated function get admins(ListAdminsHeaders headers = {}) returns admin_list|error {
        return {"type": "admin.list", "admins": [{"type": "admin", "email": "admin7@email.com", "id": "991267397", "name": "Ciaran7 Lee", "away_mode_enabled": false, "away_mode_reassign": false, "has_inbox_seat": true, "team_ids": []}]};
    }

    # Retrieve an admin
    #
    # + id - The unique identifier of a given admin
    # + headers - Headers to be sent with the request 
    # + return - Admin found 
    resource isolated function get admins/[int id](RetrieveAdminHeaders headers = {}) returns admin|error {
        return {"type": "admin", "id": "991267399", "name": "Ciaran9 Lee", "email": "admin9@email.com", "away_mode_enabled": false, "away_mode_reassign": false, "has_inbox_seat": true, "team_ids": []};
    }

    # List all activity logs
    #
    # + headers - Headers to be sent with the request 
    # + queries - Queries to be sent with the request 
    # + return - Successful response 
    resource isolated function get admins/activity_logs(ListActivityLogsHeaders headers = {}, *ListActivityLogsQueries queries) returns activity_log_list|error {
        return {"type": "activity_log.list", "pages": {"type": "pages", "next": null, "page": 1, "per_page": 20, "total_pages": 1}, "activity_logs": [{"id": "ddee3a18-0032-4061-b9b9-26230c3dd5f7", "performed_by": {"type": "admin", "id": "991267395", "email": "admin5@email.com", "ip": "127.0.0.1"}, "metadata": {"message": {"id": 123, "title": "Initial message title"}, "before": "Initial message title", "after": "Eventual message title"}, "created_at": 1719492702, "activity_type": "message_state_change", "activity_description": "Ciaran5 Lee changed your Initial message title message from Initial message title to Eventual message title."}, {"id": "5eec951b-db7a-4b5b-add5-95ffc90969b6", "performed_by": {"type": "admin", "id": "991267395", "email": "admin5@email.com", "ip": "127.0.0.1"}, "metadata": {"before": "before", "after": "after"}, "created_at": 1719492702, "activity_type": "app_name_change", "activity_description": "Ciaran5 Lee changed your app name from before to after."}]};
    }

    # List all articles
    #
    # + headers - Headers to be sent with the request 
    # + return - successful 
    resource isolated function get articles(ListArticlesHeaders headers = {}) returns article_list|error {
        return {"type": "list", "pages": {"type": "pages", "page": 1, "per_page": 25, "total_pages": 1}, "total_count": 1, "data": [{"id": "39", "type": "article", "workspace_id": "this_is_an_id33_that_should_be_at_least_4", "parent_id": 143, "parent_type": "collection", "parent_ids": [], "title": "This is the article title", "description": "", "body": "", "author_id": 991267402, "state": "published", "created_at": 1719492707, "updated_at": 1719492707, "url": "http://help-center.test/myapp-33/en/articles/39-this-is-the-article-title"}]};
    }

    # Retrieve an article
    #
    # + id - The unique identifier for the article which is given by Intercom.
    # + headers - Headers to be sent with the request 
    # + return - Article found 
    resource isolated function get articles/[int id](RetrieveArticleHeaders headers = {}) returns article|error {
        return {"id": "45", "type": "article", "workspace_id": "this_is_an_id43_that_should_be_at_least_4", "parent_id": 148, "parent_type": "collection", "parent_ids": [], "statistics": {"type": "article_statistics", "views": 0, "conversations": 0, "reactions": 0, "happy_reaction_percentage": 0, "neutral_reaction_percentage": 0, "sad_reaction_percentage": 0}, "title": "This is the article title", "description": "", "body": "", "author_id": 991267412, "state": "published", "created_at": 1719492712, "updated_at": 1719492712, "url": "http://help-center.test/myapp-43/en/articles/45-this-is-the-article-title"};
    }

    # Search for articles
    #
    # + headers - Headers to be sent with the request 
    # + queries - Queries to be sent with the request 
    # + return - Search successful 
    resource isolated function get articles/search(SearchArticlesHeaders headers = {}, *SearchArticlesQueries queries) returns article_search_response|error {
        return {"type": "list", "total_count": 1, "data": {"articles": [{"id": "55", "type": "article", "workspace_id": "this_is_an_id61_that_should_be_at_least_4", "parent_id": null, "parent_type": null, "parent_ids": [], "title": "Title 1", "description": "", "body": "", "author_id": 991267431, "state": "draft", "created_at": 1719492719, "updated_at": 1719492719, "url": null}], "highlights": []}, "pages": {"type": "pages", "page": 1, "total_pages": 1, "per_page": 10}};
    }

    # Retrieve companies
    #
    # + headers - Headers to be sent with the request 
    # + queries - Queries to be sent with the request 
    # + return - Successful 
    resource isolated function get companies(RetrieveCompanyHeaders headers = {}, *RetrieveCompanyQueries queries) returns company_list|error {
        return {"type": "list", "data": [{"type": "company", "company_id": "remote_companies_scroll_2", "id": "667d607e8a68186f43bafd26", "app_id": "this_is_an_id122_that_should_be_at_least_", "name": "IntercomQATest1", "remote_created_at": 1719492734, "created_at": 1719492734, "updated_at": 1719492734, "monthly_spend": 0, "session_count": 0, "user_count": 4, "tags": {"type": "tag.list", "tags": []}, "segments": {"type": "segment.list", "segments": []}, "plan": {}, "custom_attributes": {}}], "pages": {"type": "pages", "next": null, "page": 1, "per_page": 15, "total_pages": 1}, "total_count": 1};
    }

    # Retrieve a company by ID
    #
    # + id - The unique identifier for the company which is given by Intercom
    # + headers - Headers to be sent with the request 
    # + return - Successful 
    resource isolated function get companies/[string id](RetrieveACompanyByIdHeaders headers = {}) returns company|error {
        return {"type": "company", "company_id": "1", "id": "667d60808a68186f43bafd31", "app_id": "this_is_an_id128_that_should_be_at_least_", "name": "company1", "remote_created_at": 1719492736, "created_at": 1719492736, "updated_at": 1719492736, "monthly_spend": 0, "session_count": 0, "user_count": 1, "tags": {"type": "tag.list", "tags": []}, "segments": {"type": "segment.list", "segments": []}, "plan": {}, "custom_attributes": {}};
    }

    # List attached contacts
    #
    # + id - The unique identifier for the company which is given by Intercom
    # + headers - Headers to be sent with the request 
    # + return - Successful 
    resource isolated function get companies/[string id]/contacts(ListAttachedContactsHeaders headers = {}) returns company_attached_contacts|error {
        return {"type": "list", "data": [], "total_count": 0, "pages": {"type": "pages", "page": 1, "per_page": 50, "total_pages": 0}};
    }

    # List attached segments for companies
    #
    # + id - The unique identifier for the company which is given by Intercom
    # + headers - Headers to be sent with the request 
    # + return - Successful 
    resource isolated function get companies/[string id]/segments(ListAttachedSegmentsForCompaniesHeaders headers = {}) returns company_attached_segments|error {
        return {"type": "list", "data": []};
    }

    # Scroll over all companies
    #
    # + headers - Headers to be sent with the request 
    # + queries - Queries to be sent with the request 
    # + return - Successful 
    resource isolated function get companies/scroll(ScrollOverAllCompaniesHeaders headers = {}, *ScrollOverAllCompaniesQueries queries) returns company_scroll|error {
        return {"type": "list", "data": [{"type": "company", "company_id": "remote_companies_scroll_2", "id": "667d608b8a68186f43bafd67", "app_id": "this_is_an_id162_that_should_be_at_least_", "name": "IntercomQATest1", "remote_created_at": 1719492747, "created_at": 1719492747, "updated_at": 1719492747, "monthly_spend": 0, "session_count": 0, "user_count": 4, "tags": {"type": "tag.list", "tags": []}, "segments": {"type": "segment.list", "segments": []}, "plan": {}, "custom_attributes": {}}], "pages": null, "total_count": null, "scroll_param": "12d403b5-dc79-47b5-8ea1-01a5ac8cb6cc"};
    }

    # List all contacts
    #
    # + headers - Headers to be sent with the request 
    # + return - successful 
    resource isolated function get contacts(ListContactsHeaders headers = {}) returns contact_list|error {
        return {"type": "list", "data": [], "total_count": 0, "pages": {"type": "pages", "page": 1, "per_page": 10, "total_pages": 0}};
    }

    # List all notes
    #
    # + id - The unique identifier of a contact.
    # + headers - Headers to be sent with the request 
    # + return - Successful response 
    resource isolated function get contacts/[int id]/notes(ListNotesHeaders headers = {}) returns note_list|error {
        return {"type": "list", "data": [{"type": "note", "id": "29", "created_at": 1718887958, "contact": {"type": "contact", "id": "667d60968a68186f43bafd9c"}, "author": {"type": "admin", "id": "991267491", "name": "Ciaran101 Lee", "email": "admin101@email.com", "away_mode_enabled": false, "away_mode_reassign": false}, "body": "<p>This is a note.</p>"}, {"type": "note", "id": "28", "created_at": 1718801558, "contact": {"type": "contact", "id": "667d60968a68186f43bafd9c"}, "author": {"type": "admin", "id": "991267491", "name": "Ciaran101 Lee", "email": "admin101@email.com", "away_mode_enabled": false, "away_mode_reassign": false}, "body": "<p>This is a note.</p>"}, {"type": "note", "id": "27", "created_at": 1718801558, "contact": {"type": "contact", "id": "667d60968a68186f43bafd9c"}, "author": {"type": "admin", "id": "991267491", "name": "Ciaran101 Lee", "email": "admin101@email.com", "away_mode_enabled": false, "away_mode_reassign": false}, "body": "<p>This is a note.</p>"}], "total_count": 3, "pages": {"type": "pages", "next": null, "page": 1, "per_page": 50, "total_pages": 1}};
    }

    # List attached segments for contact
    #
    # + contact_id - The unique identifier for the contact which is given by Intercom
    # + headers - Headers to be sent with the request 
    # + return - successful 
    resource isolated function get contacts/[string contact_id]/segments(ListSegmentsForAContactHeaders headers = {}) returns contact_segments|error {
        return {"type": "list", "data": [{"type": "segment", "id": "667d60998a68186f43bafda1", "name": "segment", "created_at": 1719492761, "updated_at": 1719492761, "person_type": "user"}]};
    }

    # List subscriptions for a contact
    #
    # + contact_id - The unique identifier for the contact which is given by Intercom
    # + headers - Headers to be sent with the request 
    # + return - Successful 
    resource isolated function get contacts/[string contact_id]/subscriptions(ListSubscriptionsForAContactHeaders headers = {}) returns subscription_type_list|error {
        return {"type": "list", "data": [{"type": "subscription", "id": "93", "state": "live", "consent_type": "opt_out", "default_translation": {"name": "Newsletters", "description": "Lorem ipsum dolor sit amet", "locale": "en"}, "translations": [{"name": "Newsletters", "description": "Lorem ipsum dolor sit amet", "locale": "en"}], "content_types": ["email"]}, {"type": "subscription", "id": "95", "state": "live", "consent_type": "opt_in", "default_translation": {"name": "Newsletters", "description": "Lorem ipsum dolor sit amet", "locale": "en"}, "translations": [{"name": "Newsletters", "description": "Lorem ipsum dolor sit amet", "locale": "en"}], "content_types": ["sms_message"]}]};
    }

    # List tags attached to a contact
    #
    # + contact_id - The unique identifier for the contact which is given by Intercom
    # + headers - Headers to be sent with the request 
    # + return - successful 
    resource isolated function get contacts/[string contact_id]/tags(ListTagsForAContactHeaders headers = {}) returns tag_list|error {
        return {"type": "list", "data": [{"type": "tag", "id": "93", "name": "Manual tag"}]};
    }

    # Get a contact
    #
    # + id - id
    # + headers - Headers to be sent with the request 
    # + return - successful 
    resource isolated function get contacts/[string id](ShowContactHeaders headers = {}) returns contact|error {
        return {"type": "contact", "id": "667d60a98a68186f43bafdb9", "workspace_id": "this_is_an_id252_that_should_be_at_least_", "external_id": "70", "role": "user", "email": "joe@bloggs.com", "phone": null, "name": "Joe Bloggs", "avatar": null, "owner_id": null, "social_profiles": {"type": "list", "data": []}, "has_hard_bounced": false, "marked_email_as_spam": false, "unsubscribed_from_emails": false, "created_at": 1719492777, "updated_at": 1719492777, "signed_up_at": 1719492777, "last_seen_at": null, "last_replied_at": null, "last_contacted_at": null, "last_email_opened_at": null, "last_email_clicked_at": null, "language_override": null, "browser": null, "browser_version": null, "browser_language": null, "os": null, "location": {"type": "location", "country": null, "region": null, "city": null, "country_code": null, "continent_code": null}, "android_app_name": null, "android_app_version": null, "android_device": null, "android_os_version": null, "android_sdk_version": null, "android_last_seen_at": null, "ios_app_name": null, "ios_app_version": null, "ios_device": null, "ios_os_version": null, "ios_sdk_version": null, "ios_last_seen_at": null, "custom_attributes": {}, "tags": {"type": "list", "data": [], "url": "/contacts/667d60a98a68186f43bafdb9/tags", "total_count": 0, "has_more": false}, "notes": {"type": "list", "data": [], "url": "/contacts/667d60a98a68186f43bafdb9/notes", "total_count": 0, "has_more": false}, "companies": {"type": "list", "data": [], "url": "/contacts/667d60a98a68186f43bafdb9/companies", "total_count": 0, "has_more": false}, "opted_out_subscription_types": {"type": "list", "data": [], "url": "/contacts/667d60a98a68186f43bafdb9/subscriptions", "total_count": 0, "has_more": false}, "opted_in_subscription_types": {"type": "list", "data": [], "url": "/contacts/667d60a98a68186f43bafdb9/subscriptions", "total_count": 0, "has_more": false}, "utm_campaign": null, "utm_content": null, "utm_medium": null, "utm_source": null, "utm_term": null, "referrer": null};
    }

    # List attached companies for contact
    #
    # + id - The unique identifier for the contact which is given by Intercom
    # + headers - Headers to be sent with the request 
    # + return - successful 
    resource isolated function get contacts/[string id]/companies(ListCompaniesForAContactHeaders headers = {}) returns contact_attached_companies|error {
        return {"type": "list", "data": [{"type": "company", "company_id": "1", "id": "667d60938a68186f43bafd91", "app_id": "this_is_an_id182_that_should_be_at_least_", "name": "company12", "remote_created_at": 1719492755, "created_at": 1719492755, "updated_at": 1719492755, "last_request_at": 1719319955, "monthly_spend": 0, "session_count": 0, "user_count": 1, "tags": {"type": "tag.list", "tags": []}, "segments": {"type": "segment.list", "segments": []}, "plan": {}, "custom_attributes": {}}], "pages": {"type": "pages", "next": null, "page": 1, "per_page": 50, "total_pages": 1}, "total_count": 1};
    }

    # List all conversations
    #
    # + headers - Headers to be sent with the request 
    # + queries - Queries to be sent with the request 
    # + return - successful 
    resource isolated function get conversations(ListConversationsHeaders headers = {}, *ListConversationsQueries queries) returns paginated_response|error {
        return {"type": "conversation.list", "pages": {"type": "pages", "page": 1, "per_page": 20, "total_pages": 1}, "total_count": 1, "conversations": [{"type": "conversation", "id": "335", "created_at": 1719492795, "updated_at": 1719492795, "waiting_since": null, "snoozed_until": null, "source": {"type": "conversation", "id": "403918241", "delivered_as": "admin_initiated", "subject": "", "body": "<p>this is the message body</p>", "author": {"type": "admin", "id": "991267536", "name": "Ciaran143 Lee", "email": "admin143@email.com"}, "attachments": [], "url": null, "redacted": false}, "contacts": {"type": "contact.list", "contacts": [{"type": "contact", "id": "667d60bb8a68186f43bafdc5", "external_id": "70"}]}, "first_contact_reply": null, "admin_assignee_id": null, "team_assignee_id": null, "open": false, "state": "closed", "read": false, "tags": {"type": "tag.list", "tags": []}, "priority": "not_priority", "sla_applied": null, "statistics": null, "conversation_rating": null, "teammates": null, "title": null, "custom_attributes": {}, "topics": {}, "ticket": null, "linked_objects": {"type": "list", "data": [], "total_count": 0, "has_more": false}, "ai_agent": null, "ai_agent_participated": false}]};
    }

    # Retrieve a conversation
    #
    # + id - The id of the conversation to target
    # + headers - Headers to be sent with the request 
    # + queries - Queries to be sent with the request 
    # + return - conversation found 
    resource isolated function get conversations/[int id](RetrieveConversationHeaders headers = {}, *RetrieveConversationQueries queries) returns conversation|error {
        return {"type": "conversation", "id": "367", "created_at": 1719492825, "updated_at": 1719492825, "waiting_since": null, "snoozed_until": null, "source": {"type": "conversation", "id": "403918255", "delivered_as": "admin_initiated", "subject": "", "body": "<p>this is the message body</p>", "author": {"type": "admin", "id": "991267553", "name": "Ciaran153 Lee", "email": "admin153@email.com"}, "attachments": [], "url": null, "redacted": false}, "contacts": {"type": "contact.list", "contacts": [{"type": "contact", "id": "667d60d88a68186f43bafde1", "external_id": "70"}]}, "first_contact_reply": null, "admin_assignee_id": null, "team_assignee_id": null, "open": false, "state": "closed", "read": false, "tags": {"type": "tag.list", "tags": []}, "priority": "not_priority", "sla_applied": null, "statistics": null, "conversation_rating": null, "teammates": null, "title": null, "custom_attributes": {}, "topics": {}, "ticket": null, "linked_objects": {"type": "list", "data": [], "total_count": 0, "has_more": false}, "ai_agent": null, "ai_agent_participated": false, "conversation_parts": {"type": "conversation_part.list", "conversation_parts": [], "total_count": 0}};
    }

    # List all data attributes
    #
    # + headers - Headers to be sent with the request 
    # + queries - Queries to be sent with the request 
    # + return - Successful response 
    resource isolated function get data_attributes(LisDataAttributesHeaders headers = {}, *LisDataAttributesQueries queries) returns data_attribute_list|error {
        return {"type": "list", "data": [{"type": "data_attribute", "name": "name", "full_name": "name", "label": "Company name", "description": "The name of a company", "data_type": "string", "api_writable": true, "ui_writable": false, "messenger_writable": true, "custom": false, "archived": false, "model": "company"}, {"type": "data_attribute", "name": "company_id", "full_name": "company_id", "label": "Company ID", "description": "A number identifying a company", "data_type": "string", "api_writable": false, "ui_writable": false, "messenger_writable": true, "custom": false, "archived": false, "model": "company"}, {"type": "data_attribute", "name": "last_request_at", "full_name": "last_request_at", "label": "Company last seen", "description": "The last day anyone from a company visited your site or app", "data_type": "date", "api_writable": false, "ui_writable": false, "messenger_writable": true, "custom": false, "archived": false, "model": "company"}, {"type": "data_attribute", "name": "remote_created_at", "full_name": "remote_created_at", "label": "Company created at", "description": "The day a company was added to Intercom", "data_type": "date", "api_writable": true, "ui_writable": false, "messenger_writable": true, "custom": false, "archived": false, "model": "company"}, {"type": "data_attribute", "name": "user_count", "full_name": "user_count", "label": "People", "description": "The number of people in a company", "data_type": "integer", "api_writable": false, "ui_writable": false, "messenger_writable": true, "custom": false, "archived": false, "model": "company"}, {"type": "data_attribute", "name": "session_count", "full_name": "session_count", "label": "Company web sessions", "description": "All visits from anyone in a company to your product's site or app", "data_type": "integer", "api_writable": false, "ui_writable": false, "messenger_writable": true, "custom": false, "archived": false, "model": "company"}, {"type": "data_attribute", "name": "name", "full_name": "plan.name", "label": "Plan", "description": "A specific plan or level within your product that companies have signed up to", "data_type": "string", "api_writable": false, "ui_writable": false, "messenger_writable": true, "custom": false, "archived": false, "model": "company"}, {"type": "data_attribute", "name": "monthly_spend", "full_name": "monthly_spend", "label": "Monthly Spend", "description": "The monthly revenue you receive from a company", "data_type": "float", "api_writable": true, "ui_writable": false, "messenger_writable": true, "custom": false, "archived": false, "model": "company"}, {"type": "data_attribute", "name": "size", "full_name": "size", "label": "Company size", "description": "The number of people employed in this company, expressed as a single number", "data_type": "integer", "api_writable": true, "ui_writable": false, "messenger_writable": true, "custom": false, "archived": false, "model": "company"}, {"type": "data_attribute", "name": "industry", "full_name": "industry", "label": "Company industry", "description": "The category or domain this company belongs to e.g. 'ecommerce' or 'SaaS'", "data_type": "string", "api_writable": true, "ui_writable": false, "messenger_writable": true, "custom": false, "archived": false, "model": "company"}, {"type": "data_attribute", "name": "website", "full_name": "website", "label": "Company website", "description": "The web address for the company's primary marketing site", "data_type": "string", "api_writable": true, "ui_writable": false, "messenger_writable": true, "custom": false, "archived": false, "model": "company"}, {"id": 34, "type": "data_attribute", "name": "The One Ring", "full_name": "custom_attributes.The One Ring", "label": "The One Ring", "description": "One ring to rule them all, one ring to find them, One ring to bring them all and in the darkness bind them.", "data_type": "string", "api_writable": true, "ui_writable": false, "messenger_writable": true, "custom": true, "archived": false, "admin_id": "991267684", "created_at": 1719492954, "updated_at": 1719492954, "model": "company"}, {"type": "data_attribute", "name": "id", "full_name": "id", "label": "ID", "description": "The Intercom defined id representing the company", "data_type": "string", "api_writable": false, "ui_writable": false, "messenger_writable": true, "custom": false, "archived": false, "model": "company"}, {"type": "data_attribute", "name": "created_at", "full_name": "created_at", "label": "Created at", "description": "The time the company was added to Intercom", "data_type": "date", "api_writable": false, "ui_writable": false, "messenger_writable": true, "custom": false, "archived": false, "model": "company"}, {"type": "data_attribute", "name": "updated_at", "full_name": "updated_at", "label": "Updated at", "description": "The last time the company was updated", "data_type": "date", "api_writable": false, "ui_writable": false, "messenger_writable": true, "custom": false, "archived": false, "model": "company"}, {"type": "data_attribute", "name": "id", "full_name": "plan.id", "label": "Plan ID", "description": "The Intercom defined id representing the plan", "data_type": "string", "api_writable": false, "ui_writable": false, "messenger_writable": true, "custom": false, "archived": false, "model": "company"}, {"type": "data_attribute", "name": "app_id", "full_name": "app_id", "label": "App ID", "description": "The Intercom defined id representing the app", "data_type": "string", "api_writable": false, "ui_writable": false, "messenger_writable": true, "custom": false, "archived": false, "model": "company"}]};
    }

    # List all data events
    #
    # + headers - Headers to be sent with the request 
    # + queries - Queries to be sent with the request 
    # + return - Successful response 
    resource isolated function get events(LisDataEventsHeaders headers = {}, *LisDataEventsQueries queries) returns data_event_summary|error {
        return {"type": "event.summary", "events": [], "pages": {"next": "http://api.intercom.test/events?next page"}, "email": "user26@email.com", "intercom_user_id": "667d61648a68186f43bafe4b", "user_id": "3ecf64d0-9ed1-4e9f-88e1-da7d6e6782f3"};
    }

    # Show content data export
    #
    # + job_identifier - job_identifier
    # + headers - Headers to be sent with the request 
    # + return - successful 
    resource isolated function get export/content/data/[string job_identifier](GetDataExportHeaders headers = {}) returns data_export|error {
        return {"job_identifier": "b1ppo8h93fj386fk", "status": "pending", "download_url": "", "download_expires_at": ""};
    }

    # List all collections
    #
    # + headers - Headers to be sent with the request 
    # + return - Successful 
    resource isolated function get help_center/collections(ListAllCollectionsHeaders headers = {}) returns collection_list|error {
        return {"type": "list", "data": [{"id": "159", "workspace_id": "this_is_an_id65_that_should_be_at_least_4", "name": "English collection title", "url": "http://help-center.test/myapp-65/collection-17", "order": 17, "created_at": 1719492720, "updated_at": 1719492720, "description": "english collection description", "icon": "bookmark", "parent_id": null, "help_center_id": 79}, {"id": "160", "workspace_id": "this_is_an_id65_that_should_be_at_least_4", "name": "English section title", "url": "http://help-center.test/myapp-65/section-1", "order": 1, "created_at": 1719492720, "updated_at": 1719492720, "description": null, "icon": "bookmark", "parent_id": "159", "help_center_id": null}], "total_count": 2, "pages": {"type": "pages", "page": 1, "per_page": 20, "total_pages": 1}};
    }

    # Retrieve a collection
    #
    # + id - The unique identifier for the collection which is given by Intercom.
    # + headers - Headers to be sent with the request 
    # + return - Collection found 
    resource isolated function get help_center/collections/[int id](RetrieveCollectionHeaders headers = {}) returns collection|error {
        return {"id": "170", "workspace_id": "this_is_an_id75_that_should_be_at_least_4", "name": "English collection title", "url": "http://help-center.test/myapp-75/collection-22", "order": 22, "created_at": 1719492723, "updated_at": 1719492723, "description": "english collection description", "icon": "bookmark", "parent_id": null, "help_center_id": 84};
    }

    # List all Help Centers
    #
    # + headers - Headers to be sent with the request 
    # + return - Help Centers found 
    resource isolated function get help_center/help_centers(ListHelpCentersHeaders headers = {}) returns help_center_list|error {
        return {"type": "list", "data": []};
    }

    # Retrieve a Help Center
    #
    # + id - The unique identifier for the collection which is given by Intercom.
    # + headers - Headers to be sent with the request 
    # + return - Collection found 
    resource isolated function get help_center/help_centers/[int id](RetrieveHelpCenterHeaders headers = {}) returns help_center|error {
        return {"id": "93", "workspace_id": "this_is_an_id93_that_should_be_at_least_4", "created_at": 1719492727, "updated_at": 1719492727, "identifier": "help-center-1", "website_turned_on": false, "display_name": "Intercom Help Center"};
    }

    # Identify an admin
    #
    # + headers - Headers to be sent with the request 
    # + return - Successful response 
    resource isolated function get me(IdentifyAdminHeaders headers = {}) returns admin_with_app|error {
        return {"type": "admin", "id": "991267390", "email": "admin1@email.com", "name": "Ciaran1 Lee", "email_verified": true, "app": {"type": "app", "id_code": "this_is_an_id1_that_should_be_at_least_40", "name": "MyApp 1", "created_at": 1719492696, "secure": false, "identity_verification": false, "timezone": "America/Los_Angeles", "region": "US"}, "avatar": {"type": "avatar", "image_url": "https://static.intercomassets.com/assets/default-avatars/admins/128.png"}, "has_inbox_seat": true};
    }

    # List all newsfeeds
    #
    # + headers - Headers to be sent with the request 
    # + return - successful 
    resource isolated function get news/newsfeeds(ListNewsfeedsHeaders headers = {}) returns paginated_response|error {
        return {"type": "list", "pages": {"page": 1, "per_page": 10, "total_pages": 1, "type": "pages"}, "data": [{"id": "68", "type": "newsfeed", "name": "Visitor Feed", "created_at": 1719492987, "updated_at": 1719492987}, {"id": "69", "type": "newsfeed", "name": "Visitor Feed", "created_at": 1719492987, "updated_at": 1719492987}], "total_count": 2};
    }

    # Retrieve a newsfeed
    #
    # + id - The unique identifier for the news feed item which is given by Intercom.
    # + headers - Headers to be sent with the request 
    # + return - successful 
    resource isolated function get news/newsfeeds/[string id](RetrieveNewsfeedHeaders headers = {}) returns newsfeed|error {
        return {"id": "72", "type": "newsfeed", "name": "Visitor Feed", "created_at": 1719492988, "updated_at": 1719492988};
    }

    # List all live newsfeed items
    #
    # + id - The unique identifier for the news feed item which is given by Intercom.
    # + headers - Headers to be sent with the request 
    # + return - successful 
    resource isolated function get news/newsfeeds/[string id]/items(ListLiveNewsfeedItemsHeaders headers = {}) returns paginated_response|error {
        return {"type": "list", "pages": {"page": 1, "per_page": 20, "total_pages": 0, "type": "pages"}, "data": [], "total_count": 0};
    }

    # Retrieve a note
    #
    # + id - The unique identifier of a given note
    # + headers - Headers to be sent with the request 
    # + return - Note found 
    resource isolated function get notes/[int id](RetrieveNoteHeaders headers = {}) returns note|error {
        return {"type": "note", "id": "37", "created_at": 1718801789, "contact": {"type": "contact", "id": "667d617d8a68186f43bafe58"}, "author": {"type": "admin", "id": "991267764", "name": "Ciaran316 Lee", "email": "admin316@email.com", "away_mode_enabled": false, "away_mode_reassign": false}, "body": "<p>This is a note.</p>"};
    }

    # List all segments
    #
    # + headers - Headers to be sent with the request 
    # + queries - Queries to be sent with the request 
    # + return - Successful response 
    resource isolated function get segments(ListSegmentsHeaders headers = {}, *ListSegmentsQueries queries) returns segment_list|error {
        return {"type": "segment.list", "segments": [{"type": "segment", "id": "667d617f8a68186f43bafe5b", "name": "John segment", "created_at": 1719492991, "updated_at": 1719492991, "person_type": "user"}, {"type": "segment", "id": "667d617f8a68186f43bafe5c", "name": "Jane segment", "created_at": 1719492991, "updated_at": 1719492991, "person_type": "user"}]};
    }

    # Retrieve a segment
    #
    # + id - The unique identified of a given segment.
    # + headers - Headers to be sent with the request 
    # + return - Successful response 
    resource isolated function get segments/[string id](RetrieveSegmentHeaders headers = {}) returns segment|error {
        return {"type": "segment", "id": "667d61808a68186f43bafe5f", "name": "John segment", "created_at": 1719492992, "updated_at": 1719492992, "person_type": "user"};
    }

    # List subscription types
    #
    # + headers - Headers to be sent with the request 
    # + return - Successful 
    resource isolated function get subscription_types(ListSubscriptionTypesHeaders headers = {}) returns subscription_type_list|error {
        return {"type": "list", "data": [{"type": "subscription", "id": "137", "state": "live", "consent_type": "opt_out", "default_translation": {"name": "Newsletters", "description": "Lorem ipsum dolor sit amet", "locale": "en"}, "translations": [{"name": "Newsletters", "description": "Lorem ipsum dolor sit amet", "locale": "en"}], "content_types": ["email"]}]};
    }

    # List all tags
    #
    # + headers - Headers to be sent with the request 
    # + return - successful 
    resource isolated function get tags(ListTagsHeaders headers = {}) returns tag_list|error {
        return {"type": "list", "data": [{"type": "tag", "id": "115", "name": "Manual tag 1"}]};
    }

    # Find a specific tag
    #
    # + id - The unique identifier of a given tag
    # + headers - Headers to be sent with the request 
    # + return - Tag found 
    resource isolated function get tags/[string id](FindTagHeaders headers = {}) returns tag|error {
        return {"type": "tag", "id": "126", "name": "Manual tag"};
    }

    # List all teams
    #
    # + headers - Headers to be sent with the request 
    # + return - successful 
    resource isolated function get teams(ListTeamsHeaders headers = {}) returns team_list|error {
        return {"type": "team.list", "teams": []};
    }

    # Retrieve a team
    #
    # + id - The unique identifier of a given team.
    # + headers - Headers to be sent with the request 
    # + return - successful 
    resource isolated function get teams/[string id](RetrieveTeamHeaders headers = {}) returns team|error {
        return {"type": "team", "id": "991267802", "name": "team 1", "admin_ids": []};
    }

    # List all ticket types
    #
    # + headers - Headers to be sent with the request 
    # + return - successful 
    resource isolated function get ticket_types(ListTicketTypesHeaders headers = {}) returns ticket_type_list|error {
        return {"type": "list", "data": [{"type": "ticket_type", "id": "85", "name": "Bug Report", "description": "Bug Report Template", "icon": "🎟️", "workspace_id": "this_is_an_id608_that_should_be_at_least_", "archived": false, "created_at": 1719493014, "updated_at": 1719493014, "is_internal": false, "ticket_type_attributes": {"type": "list", "data": [{"type": "ticket_type_attribute", "id": "218", "workspace_id": "this_is_an_id608_that_should_be_at_least_", "name": "_default_title_", "description": "", "data_type": "string", "input_options": {"multiline": false}, "order": 0, "required_to_create": false, "required_to_create_for_contacts": false, "visible_on_create": true, "visible_to_contacts": true, "default": true, "ticket_type_id": 85, "archived": false, "created_at": 1719493014, "updated_at": 1719493014}, {"type": "ticket_type_attribute", "id": "220", "workspace_id": "this_is_an_id608_that_should_be_at_least_", "name": "name", "description": "description", "data_type": "string", "input_options": null, "order": 0, "required_to_create": false, "required_to_create_for_contacts": false, "visible_on_create": false, "visible_to_contacts": false, "default": false, "ticket_type_id": 85, "archived": false, "created_at": 1719493014, "updated_at": 1719493014}, {"type": "ticket_type_attribute", "id": "219", "workspace_id": "this_is_an_id608_that_should_be_at_least_", "name": "_default_description_", "description": "", "data_type": "string", "input_options": {"multiline": true}, "order": 1, "required_to_create": false, "required_to_create_for_contacts": false, "visible_on_create": true, "visible_to_contacts": true, "default": true, "ticket_type_id": 85, "archived": false, "created_at": 1719493014, "updated_at": 1719493014}]}, "category": "Customer"}]};
    }

    # Retrieve a ticket type
    #
    # + id - The unique identifier for the ticket type which is given by Intercom.
    # + headers - Headers to be sent with the request 
    # + return - Ticket type found 
    resource isolated function get ticket_types/[string id](GetTicketTypeHeaders headers = {}) returns ticket_type|error {
        return {"type": "ticket_type", "id": "90", "name": "Bug Report", "description": "Bug Report Template", "icon": "🎟️", "workspace_id": "this_is_an_id616_that_should_be_at_least_", "archived": false, "created_at": 1719493017, "updated_at": 1719493017, "is_internal": false, "ticket_type_attributes": {"type": "list", "data": [{"type": "ticket_type_attribute", "id": "232", "workspace_id": "this_is_an_id616_that_should_be_at_least_", "name": "_default_title_", "description": "", "data_type": "string", "input_options": {"multiline": false}, "order": 0, "required_to_create": false, "required_to_create_for_contacts": false, "visible_on_create": true, "visible_to_contacts": true, "default": true, "ticket_type_id": 90, "archived": false, "created_at": 1719493017, "updated_at": 1719493017}, {"type": "ticket_type_attribute", "id": "234", "workspace_id": "this_is_an_id616_that_should_be_at_least_", "name": "name", "description": "description", "data_type": "string", "input_options": null, "order": 0, "required_to_create": false, "required_to_create_for_contacts": false, "visible_on_create": false, "visible_to_contacts": false, "default": false, "ticket_type_id": 90, "archived": false, "created_at": 1719493017, "updated_at": 1719493017}, {"type": "ticket_type_attribute", "id": "233", "workspace_id": "this_is_an_id616_that_should_be_at_least_", "name": "_default_description_", "description": "", "data_type": "string", "input_options": {"multiline": true}, "order": 1, "required_to_create": false, "required_to_create_for_contacts": false, "visible_on_create": true, "visible_to_contacts": true, "default": true, "ticket_type_id": 90, "archived": false, "created_at": 1719493017, "updated_at": 1719493017}]}, "category": "Customer"};
    }

    # Retrieve a ticket
    #
    # + id - The unique identifier for the ticket which is given by Intercom.
    # + headers - Headers to be sent with the request 
    # + return - Ticket found 
    resource isolated function get tickets/[string id](GetTicketHeaders headers = {}) returns ticket|error {
        return {"type": "ticket", "id": "493", "ticket_id": "52", "ticket_attributes": {"_default_title_": "attribute_value", "_default_description_": null}, "ticket_state": "submitted", "ticket_type": {"type": "ticket_type", "id": "112", "name": "my-ticket-type-21", "description": "my ticket type description is awesome.", "icon": "🦁", "workspace_id": "this_is_an_id660_that_should_be_at_least_", "archived": false, "created_at": 1719493060, "updated_at": 1719493060, "is_internal": false, "ticket_type_attributes": {"type": "list", "data": [{"type": "ticket_type_attribute", "id": "268", "workspace_id": "this_is_an_id660_that_should_be_at_least_", "name": "_default_title_", "description": "ola", "data_type": "string", "input_options": null, "order": 0, "required_to_create": true, "required_to_create_for_contacts": false, "visible_on_create": true, "visible_to_contacts": false, "default": false, "ticket_type_id": 112, "archived": false, "created_at": 1719493060, "updated_at": 1719493060}, {"type": "ticket_type_attribute", "id": "269", "workspace_id": "this_is_an_id660_that_should_be_at_least_", "name": "_default_description_", "description": "ola", "data_type": "string", "input_options": null, "order": 0, "required_to_create": true, "required_to_create_for_contacts": false, "visible_on_create": true, "visible_to_contacts": false, "default": false, "ticket_type_id": 112, "archived": false, "created_at": 1719493060, "updated_at": 1719493060}]}, "category": "Back-office"}, "contacts": {"type": "contact.list", "contacts": [{"type": "contact", "id": "667d61c48a68186f43bafe91", "external_id": "038050f6-d917-4b9d-89cb-539b1d371172"}]}, "admin_assignee_id": "0", "team_assignee_id": "0", "created_at": 1719493061, "updated_at": 1719493061, "ticket_parts": {"type": "ticket_part.list", "ticket_parts": [{"type": "ticket_part", "id": "134", "part_type": "ticket_state_updated_by_admin", "ticket_state": "submitted", "previous_ticket_state": "submitted", "created_at": 1719493061, "updated_at": 1719493061, "author": {"id": "991267912", "type": "admin", "name": "Ciaran445 Lee", "email": "admin445@email.com"}, "attachments": [], "redacted": false}], "total_count": 1}, "open": true, "linked_objects": {"type": "list", "data": [], "total_count": 0, "has_more": false}, "category": "Back-office", "is_shared": false, "ticket_state_internal_label": "Submitted", "ticket_state_external_label": "Submitted"};
    }

    # Retrieve a visitor with User ID
    #
    # + headers - Headers to be sent with the request 
    # + queries - Queries to be sent with the request 
    # + return - successful 
    resource isolated function get visitors(RetrieveVisitorWithUserIdHeaders headers = {}, *RetrieveVisitorWithUserIdQueries queries) returns visitor|error {
        return {"type": "visitor", "id": "667d61ce8a68186f43bafe9b", "user_id": "3ecf64d0-9ed1-4e9f-88e1-da7d6e6782f3", "anonymous": true, "email": "", "phone": null, "name": null, "pseudonym": null, "avatar": {"type": "avatar", "image_url": null}, "app_id": "this_is_an_id677_that_should_be_at_least_", "companies": {"type": "company.list", "companies": []}, "location_data": {}, "last_request_at": null, "created_at": 1719493070, "remote_created_at": 1719493070, "signed_up_at": 1719493070, "updated_at": 1719493070, "session_count": 0, "social_profiles": {"type": "social_profile.list", "social_profiles": []}, "owner_id": null, "unsubscribed_from_emails": false, "marked_email_as_spam": false, "has_hard_bounced": false, "tags": {"type": "tag.list", "tags": []}, "segments": {"type": "segment.list", "segments": []}, "custom_attributes": {}, "referrer": null, "utm_campaign": null, "utm_content": null, "utm_medium": null, "utm_source": null, "utm_term": null, "do_not_track": null};
    }

    # Create an article
    #
    # + headers - Headers to be sent with the request 
    # + return - article created 
    resource isolated function post articles(create_article_request payload, CreateArticleHeaders headers = {}) returns article|error {
        return {"id": "42", "type": "article", "workspace_id": "this_is_an_id37_that_should_be_at_least_4", "parent_id": 145, "parent_type": "collection", "parent_ids": [], "statistics": {"type": "article_statistics", "views": 0, "conversations": 0, "reactions": 0, "happy_reaction_percentage": 0, "neutral_reaction_percentage": 0, "sad_reaction_percentage": 0}, "title": "Thanks for everything", "description": "Description of the Article", "body": "<p class=\"no-margin\">Body of the Article</p>", "author_id": 991267407, "state": "published", "created_at": 1719492710, "updated_at": 1719492710, "url": "http://help-center.test/myapp-37/en/articles/42-thanks-for-everything"};
    }

    # Create or Update a company
    #
    # + headers - Headers to be sent with the request 
    # + return - Successful 
    resource isolated function post companies(create_or_update_company_request payload, CreateOrUpdateCompanyHeaders headers = {}) returns company|error {
        return {"type": "company", "company_id": "company_remote_id", "id": "667d607c8a68186f43bafd1e", "app_id": "this_is_an_id116_that_should_be_at_least_", "name": "my company", "remote_created_at": 1374138000, "created_at": 1719492732, "updated_at": 1719492732, "monthly_spend": 0, "session_count": 0, "user_count": 0, "tags": {"type": "tag.list", "tags": []}, "segments": {"type": "segment.list", "segments": []}, "plan": {}, "custom_attributes": {"creation_source": "api"}};
    }

    # List all companies
    #
    # + headers - Headers to be sent with the request 
    # + queries - Queries to be sent with the request 
    # + return - Successful 
    resource isolated function post companies/list(ListAllCompaniesHeaders headers = {}, *ListAllCompaniesQueries queries) returns company_list|error {
        return {"type": "list", "data": [{"type": "company", "company_id": "remote_companies_scroll_2", "id": "667d608a8a68186f43bafd61", "app_id": "this_is_an_id158_that_should_be_at_least_", "name": "IntercomQATest1", "remote_created_at": 1719492746, "created_at": 1719492746, "updated_at": 1719492746, "monthly_spend": 0, "session_count": 0, "user_count": 4, "tags": {"type": "tag.list", "tags": []}, "segments": {"type": "segment.list", "segments": []}, "plan": {}, "custom_attributes": {}}], "pages": {"type": "pages", "next": null, "page": 1, "per_page": 15, "total_pages": 1}, "total_count": 1};
    }

    # Create contact
    #
    # + headers - Headers to be sent with the request 
    # + return - successful 
    resource isolated function post contacts(contacts_body payload, CreateContactHeaders headers = {}) returns contact|error {
        return {"type": "contact", "id": "667d60b08a68186f43bafdbf", "workspace_id": "this_is_an_id272_that_should_be_at_least_", "external_id": null, "role": "user", "email": "joebloggs@intercom.io", "phone": null, "name": null, "avatar": null, "owner_id": null, "social_profiles": {"type": "list", "data": []}, "has_hard_bounced": false, "marked_email_as_spam": false, "unsubscribed_from_emails": false, "created_at": 1719492784, "updated_at": 1719492784, "signed_up_at": null, "last_seen_at": null, "last_replied_at": null, "last_contacted_at": null, "last_email_opened_at": null, "last_email_clicked_at": null, "language_override": null, "browser": null, "browser_version": null, "browser_language": null, "os": null, "location": {"type": "location", "country": null, "region": null, "city": null, "country_code": null, "continent_code": null}, "android_app_name": null, "android_app_version": null, "android_device": null, "android_os_version": null, "android_sdk_version": null, "android_last_seen_at": null, "ios_app_name": null, "ios_app_version": null, "ios_device": null, "ios_os_version": null, "ios_sdk_version": null, "ios_last_seen_at": null, "custom_attributes": {}, "tags": {"type": "list", "data": [], "url": "/contacts/667d60b08a68186f43bafdbf/tags", "total_count": 0, "has_more": false}, "notes": {"type": "list", "data": [], "url": "/contacts/667d60b08a68186f43bafdbf/notes", "total_count": 0, "has_more": false}, "companies": {"type": "list", "data": [], "url": "/contacts/667d60b08a68186f43bafdbf/companies", "total_count": 0, "has_more": false}, "opted_out_subscription_types": {"type": "list", "data": [], "url": "/contacts/667d60b08a68186f43bafdbf/subscriptions", "total_count": 0, "has_more": false}, "opted_in_subscription_types": {"type": "list", "data": [], "url": "/contacts/667d60b08a68186f43bafdbf/subscriptions", "total_count": 0, "has_more": false}, "utm_campaign": null, "utm_content": null, "utm_medium": null, "utm_source": null, "utm_term": null, "referrer": null};
    }

    # Create a note
    #
    # + id - The unique identifier of a given contact.
    # + headers - Headers to be sent with the request 
    # + return - Successful response 
    resource isolated function post contacts/[int id]/notes(id_notes_body payload, CreateNoteHeaders headers = {}) returns note|error {
        return {"type": "note", "id": "34", "created_at": 1719492759, "contact": {"type": "contact", "id": "667d60978a68186f43bafd9e"}, "author": {"type": "admin", "id": "991267493", "name": "Ciaran103 Lee", "email": "admin103@email.com", "away_mode_enabled": false, "away_mode_reassign": false}, "body": "<p>Hello</p>"};
    }

    # Add subscription to a contact
    #
    # + contact_id - The unique identifier for the contact which is given by Intercom
    # + headers - Headers to be sent with the request 
    # + return - Successful 
    resource isolated function post contacts/[string contact_id]/subscriptions(contact_id_subscriptions_body payload, AttachSubscriptionTypeToContactHeaders headers = {}) returns subscription_type|error {
        return {"type": "subscription", "id": "108", "state": "live", "consent_type": "opt_in", "default_translation": {"name": "Newsletters", "description": "Lorem ipsum dolor sit amet", "locale": "en"}, "translations": [{"name": "Newsletters", "description": "Lorem ipsum dolor sit amet", "locale": "en"}], "content_types": ["sms_message"]};
    }

    # Add tag to a contact
    #
    # + contact_id - The unique identifier for the contact which is given by Intercom
    # + headers - Headers to be sent with the request 
    # + return - successful 
    resource isolated function post contacts/[string contact_id]/tags(contact_id_tags_body payload, AttachTagToContactHeaders headers = {}) returns tag|error {
        return {"type": "tag", "id": "94", "name": "Manual tag"};
    }

    # Archive contact
    #
    # + id - id
    # + headers - Headers to be sent with the request 
    # + return - successful 
    resource isolated function post contacts/[string id]/archive(ArchiveContactHeaders headers = {}) returns contact_archived|error {
        return {"id": "667d60b18a68186f43bafdc0", "external_id": "70", "type": "contact", "archived": true};
    }

    # Attach a Contact to a Company
    #
    # + id - The unique identifier for the contact which is given by Intercom
    # + headers - Headers to be sent with the request 
    # + return - Successful 
    resource isolated function post contacts/[string id]/companies(id_companies_body payload, AttachContactToACompanyHeaders headers = {}) returns company|error {
        return {"type": "company", "company_id": "1", "id": "667d608d8a68186f43bafd70", "app_id": "this_is_an_id166_that_should_be_at_least_", "name": "company6", "remote_created_at": 1719492749, "created_at": 1719492749, "updated_at": 1719492749, "monthly_spend": 0, "session_count": 0, "user_count": 1, "tags": {"type": "tag.list", "tags": []}, "segments": {"type": "segment.list", "segments": []}, "plan": {}, "custom_attributes": {}};
    }

    # Unarchive contact
    #
    # + id - id
    # + headers - Headers to be sent with the request 
    # + return - successful 
    resource isolated function post contacts/[string id]/unarchive(UnarchiveContactHeaders headers = {}) returns contact_unarchived|error {
        return {"id": "667d60b28a68186f43bafdc1", "external_id": "70", "type": "contact", "archived": false};
    }

    # Merge a lead and a user
    #
    # + headers - Headers to be sent with the request 
    # + return - successful 
    resource isolated function post contacts/merge(merge_contacts_request payload, MergeContactHeaders headers = {}) returns contact|error {
        return {"type": "contact", "id": "667d60ac8a68186f43bafdbc", "workspace_id": "this_is_an_id260_that_should_be_at_least_", "external_id": "70", "role": "user", "email": "joe@bloggs.com", "phone": null, "name": "Joe Bloggs", "avatar": null, "owner_id": null, "social_profiles": {"type": "list", "data": []}, "has_hard_bounced": false, "marked_email_as_spam": false, "unsubscribed_from_emails": false, "created_at": 1719492780, "updated_at": 1719492780, "signed_up_at": 1719492780, "last_seen_at": null, "last_replied_at": null, "last_contacted_at": null, "last_email_opened_at": null, "last_email_clicked_at": null, "language_override": null, "browser": null, "browser_version": null, "browser_language": null, "os": null, "location": {"type": "location", "country": null, "region": null, "city": null, "country_code": null, "continent_code": null}, "android_app_name": null, "android_app_version": null, "android_device": null, "android_os_version": null, "android_sdk_version": null, "android_last_seen_at": null, "ios_app_name": null, "ios_app_version": null, "ios_device": null, "ios_os_version": null, "ios_sdk_version": null, "ios_last_seen_at": null, "custom_attributes": {}, "tags": {"type": "list", "data": [], "url": "/contacts/667d60ac8a68186f43bafdbc/tags", "total_count": 0, "has_more": false}, "notes": {"type": "list", "data": [], "url": "/contacts/667d60ac8a68186f43bafdbc/notes", "total_count": 0, "has_more": false}, "companies": {"type": "list", "data": [], "url": "/contacts/667d60ac8a68186f43bafdbc/companies", "total_count": 0, "has_more": false}, "opted_out_subscription_types": {"type": "list", "data": [], "url": "/contacts/667d60ac8a68186f43bafdbc/subscriptions", "total_count": 0, "has_more": false}, "opted_in_subscription_types": {"type": "list", "data": [], "url": "/contacts/667d60ac8a68186f43bafdbc/subscriptions", "total_count": 0, "has_more": false}, "utm_campaign": null, "utm_content": null, "utm_medium": null, "utm_source": null, "utm_term": null, "referrer": null};
    }

    # Search contacts
    #
    # + headers - Headers to be sent with the request 
    # + return - successful 
    resource isolated function post contacts/search(search_request payload, SearchContactsHeaders headers = {}) returns contact_list|error {
        return {"type": "list", "data": [], "total_count": 0, "pages": {"type": "pages", "page": 1, "per_page": 5, "total_pages": 0}};
    }

    # Creates a conversation
    #
    # + headers - Headers to be sent with the request 
    # + return - conversation created 
    resource isolated function post conversations(create_conversation_request payload, CreateConversationHeaders headers = {}) returns message|error {
        return {"type": "user_message", "id": "403918251", "created_at": 1719492819, "body": "Hello there", "message_type": "inapp", "conversation_id": "363"};
    }

    # Convert a conversation to a ticket
    #
    # + id - The id of the conversation to target
    # + headers - Headers to be sent with the request 
    # + return - successful 
    resource isolated function post conversations/[int id]/convert(convert_conversation_to_ticket_request payload, ConvertConversationToTicketHeaders headers = {}) returns ticket|error {
        return {"type": "ticket", "id": "474", "ticket_id": "37", "ticket_attributes": {}, "ticket_state": "submitted", "ticket_type": {"type": "ticket_type", "id": "79", "name": "my-ticket-type-1", "description": "my ticket type description is awesome.", "icon": "🦁", "workspace_id": "this_is_an_id404_that_should_be_at_least_", "archived": false, "created_at": 1719492947, "updated_at": 1719492947, "is_internal": false, "ticket_type_attributes": {"type": "list", "data": []}, "category": "Customer"}, "contacts": {"type": "contact.list", "contacts": [{"type": "contact", "id": "667d61518a68186f43bafe45", "external_id": "70"}]}, "admin_assignee_id": "0", "team_assignee_id": "0", "created_at": 1719492945, "updated_at": 1719492947, "ticket_parts": {"type": "ticket_part.list", "ticket_parts": [{"type": "ticket_part", "id": "117", "part_type": "comment", "body": "<p>Comment for message</p>", "created_at": 1719492945, "updated_at": 1719492945, "author": {"id": "667d61518a68186f43bafe45", "type": "user", "name": "Joe Bloggs", "email": "joe@bloggs.com"}, "attachments": [], "redacted": false}, {"type": "ticket_part", "id": "118", "part_type": "ticket_state_updated_by_admin", "ticket_state": "submitted", "previous_ticket_state": "submitted", "created_at": 1719492947, "updated_at": 1719492947, "author": {"id": "991267667", "type": "bot", "name": "Operator", "email": "operator+this_is_an_id404_that_should_be_at_least_@intercom.io"}, "attachments": [], "redacted": false}], "total_count": 2}, "open": true, "linked_objects": {"type": "list", "data": [], "total_count": 0, "has_more": false}, "category": "Customer", "is_shared": true, "ticket_state_internal_label": "Submitted", "ticket_state_external_label": "Submitted"};
    }

    # Add tag to a conversation
    #
    # + conversation_id - conversation_id
    # + headers - Headers to be sent with the request 
    # + return - successful 
    resource isolated function post conversations/[string conversation_id]/tags(conversation_id_tags_body payload, AttachTagToConversationHeaders headers = {}) returns tag|error {
        return {"type": "tag", "id": "99", "name": "Manual tag"};
    }

    # Attach a contact to a conversation
    #
    # + id - The identifier for the conversation as given by Intercom.
    # + headers - Headers to be sent with the request 
    # + return - Attach a contact to a conversation 
    resource isolated function post conversations/[string id]/customers(attach_contact_to_conversation_request payload, AttachContactToConversationHeaders headers = {}) returns conversation|error {
        return {"customers": [{"type": "user", "id": "667d61168a68186f43bafe0d"}]};
    }

    # Manage a conversation
    #
    # + id - The identifier for the conversation as given by Intercom.
    # + headers - Headers to be sent with the request 
    # + return - Assign a conversation 
    resource isolated function post conversations/[string id]/parts(id_parts_body payload, ManageConversationHeaders headers = {}) returns conversation|error {
        return {"type": "conversation", "id": "394", "created_at": 1719492862, "updated_at": 1719492862, "waiting_since": null, "snoozed_until": null, "source": {"type": "conversation", "id": "403918276", "delivered_as": "admin_initiated", "subject": "", "body": "<p>this is the message body</p>", "author": {"type": "admin", "id": "991267608", "name": "Ciaran189 Lee", "email": "admin189@email.com"}, "attachments": [], "url": null, "redacted": false}, "contacts": {"type": "contact.list", "contacts": [{"type": "contact", "id": "667d60fd8a68186f43bafdfb", "external_id": "70"}]}, "first_contact_reply": null, "admin_assignee_id": null, "team_assignee_id": null, "open": false, "state": "closed", "read": false, "tags": {"type": "tag.list", "tags": []}, "priority": "not_priority", "sla_applied": null, "statistics": null, "conversation_rating": null, "teammates": null, "title": null, "custom_attributes": {}, "topics": {}, "ticket": null, "linked_objects": {"type": "list", "data": [], "total_count": 0, "has_more": false}, "ai_agent": null, "ai_agent_participated": false, "conversation_parts": {"type": "conversation_part.list", "conversation_parts": [{"type": "conversation_part", "id": "102", "part_type": "close", "body": "<p>Goodbye :)</p>", "created_at": 1719492862, "updated_at": 1719492862, "notified_at": 1719492862, "assigned_to": null, "author": {"id": "991267608", "type": "admin", "name": "Ciaran189 Lee", "email": "admin189@email.com"}, "attachments": [], "external_id": null, "redacted": false}], "total_count": 1}};
    }

    # Reply to a conversation
    #
    # + id - The Intercom provisioned identifier for the conversation or the string "last" to reply to the last part of the conversation
    # + headers - Headers to be sent with the request 
    # + return - User last conversation reply 
    resource isolated function post conversations/[string id]/reply(reply_conversation_request payload, ReplyConversationHeaders headers = {}) returns conversation|error {
        return {"type": "conversation", "id": "387", "created_at": 1719492849, "updated_at": 1719492850, "waiting_since": 1719492850, "snoozed_until": null, "source": {"type": "conversation", "id": "403918269", "delivered_as": "admin_initiated", "subject": "", "body": "<p>this is the message body</p>", "author": {"type": "admin", "id": "991267594", "name": "Ciaran182 Lee", "email": "admin182@email.com"}, "attachments": [], "url": null, "redacted": false}, "contacts": {"type": "contact.list", "contacts": [{"type": "contact", "id": "667d60f18a68186f43bafdf4", "external_id": "70"}]}, "first_contact_reply": {"created_at": 1719492850, "type": "conversation", "url": null}, "admin_assignee_id": null, "team_assignee_id": null, "open": true, "state": "open", "read": false, "tags": {"type": "tag.list", "tags": []}, "priority": "not_priority", "sla_applied": null, "statistics": null, "conversation_rating": null, "teammates": null, "title": null, "custom_attributes": {}, "topics": {}, "ticket": null, "linked_objects": {"type": "list", "data": [], "total_count": 0, "has_more": false}, "ai_agent": null, "ai_agent_participated": false, "conversation_parts": {"type": "conversation_part.list", "conversation_parts": [{"type": "conversation_part", "id": "99", "part_type": "open", "body": "<p>Thanks again :)</p>", "created_at": 1719492850, "updated_at": 1719492850, "notified_at": 1719492850, "assigned_to": null, "author": {"id": "667d60f18a68186f43bafdf4", "type": "user", "name": "Joe Bloggs", "email": "joe@bloggs.com"}, "attachments": [], "external_id": null, "redacted": false}], "total_count": 1}};
    }

    # Run Assignment Rules on a conversation
    #
    # + id - The identifier for the conversation as given by Intercom.
    # + headers - Headers to be sent with the request 
    # + return - Assign a conversation using assignment rules 
    resource isolated function post conversations/[string id]/run_assignment_rules(AutoAssignConversationHeaders headers = {}) returns conversation|error {
        return {"type": "conversation", "id": "409", "created_at": 1719492880, "updated_at": 1719492881, "waiting_since": null, "snoozed_until": null, "source": {"type": "conversation", "id": "403918285", "delivered_as": "admin_initiated", "subject": "", "body": "<p>this is the message body</p>", "author": {"type": "admin", "id": "991267623", "name": "Ciaran197 Lee", "email": "admin197@email.com"}, "attachments": [], "url": null, "redacted": false}, "contacts": {"type": "contact.list", "contacts": [{"type": "contact", "id": "667d61108a68186f43bafe09", "external_id": "70"}]}, "first_contact_reply": null, "admin_assignee_id": null, "team_assignee_id": null, "open": false, "state": "closed", "read": false, "tags": {"type": "tag.list", "tags": []}, "priority": "not_priority", "sla_applied": null, "statistics": null, "conversation_rating": null, "teammates": null, "title": null, "custom_attributes": {}, "topics": {}, "ticket": null, "linked_objects": {"type": "list", "data": [], "total_count": 0, "has_more": false}, "ai_agent": null, "ai_agent_participated": false, "conversation_parts": {"type": "conversation_part.list", "conversation_parts": [{"type": "conversation_part", "id": "107", "part_type": "default_assignment", "body": null, "created_at": 1719492881, "updated_at": 1719492881, "notified_at": 1719492881, "assigned_to": {"type": "nobody_admin", "id": null}, "author": {"id": "991267624", "type": "bot", "name": "Operator", "email": "operator+this_is_an_id364_that_should_be_at_least_@intercom.io"}, "attachments": [], "external_id": null, "redacted": false}], "total_count": 1}};
    }

    # Redact a conversation part
    #
    # + headers - Headers to be sent with the request 
    # + return - Redact a conversation part 
    resource isolated function post conversations/redact(redact_conversation_request payload, RedactConversationHeaders headers = {}) returns conversation|error {
        return {"type": "conversation", "id": "471", "created_at": 1719492938, "updated_at": 1719492940, "waiting_since": 1719492939, "snoozed_until": null, "source": {"type": "conversation", "id": "403918311", "delivered_as": "admin_initiated", "subject": "", "body": "<p>this is the message body</p>", "author": {"type": "admin", "id": "991267657", "name": "Ciaran217 Lee", "email": "admin217@email.com"}, "attachments": [], "url": null, "redacted": false}, "contacts": {"type": "contact.list", "contacts": [{"type": "contact", "id": "667d614a8a68186f43bafe42", "external_id": "70"}]}, "first_contact_reply": {"created_at": 1719492939, "type": "conversation", "url": null}, "admin_assignee_id": null, "team_assignee_id": null, "open": true, "state": "open", "read": true, "tags": {"type": "tag.list", "tags": []}, "priority": "not_priority", "sla_applied": null, "statistics": null, "conversation_rating": null, "teammates": null, "title": null, "custom_attributes": {}, "topics": {}, "ticket": null, "linked_objects": {"type": "list", "data": [], "total_count": 0, "has_more": false}, "ai_agent": null, "ai_agent_participated": false, "conversation_parts": {"type": "conversation_part.list", "conversation_parts": [{"type": "conversation_part", "id": "115", "part_type": "open", "body": "<p><i>This message was deleted</i></p>", "created_at": 1719492939, "updated_at": 1719492940, "notified_at": 1719492939, "assigned_to": null, "author": {"id": "667d614a8a68186f43bafe42", "type": "user", "name": "Joe Bloggs", "email": "joe@bloggs.com"}, "attachments": [], "external_id": null, "redacted": true}], "total_count": 1}};
    }

    # Search conversations
    #
    # + headers - Headers to be sent with the request 
    # + return - successful 
    resource isolated function post conversations/search(search_request payload, SearchConversationsHeaders headers = {}) returns conversation_list|error {
        return {"type": "conversation.list", "pages": {"type": "pages", "page": 1, "per_page": 5, "total_pages": 1}, "total_count": 1, "conversations": [{"type": "conversation", "id": "378", "created_at": 1719492843, "updated_at": 1719492843, "waiting_since": null, "snoozed_until": null, "source": {"type": "conversation", "id": "403918266", "delivered_as": "admin_initiated", "subject": "", "body": "<p>this is the message body</p>", "author": {"type": "admin", "id": "991267591", "name": "Ciaran180 Lee", "email": "admin180@email.com"}, "attachments": [], "url": null, "redacted": false}, "contacts": {"type": "contact.list", "contacts": [{"type": "contact", "id": "667d60ea8a68186f43bafdec", "external_id": "70"}]}, "first_contact_reply": null, "admin_assignee_id": null, "team_assignee_id": null, "open": false, "state": "closed", "read": false, "tags": {"type": "tag.list", "tags": []}, "priority": "not_priority", "sla_applied": null, "statistics": null, "conversation_rating": null, "teammates": null, "title": null, "custom_attributes": {}, "topics": {}, "ticket": null, "linked_objects": {"type": "list", "data": [], "total_count": 0, "has_more": false}, "ai_agent": null, "ai_agent_participated": false}]};
    }

    # Create a data attribute
    #
    # + headers - Headers to be sent with the request 
    # + return - Successful 
    resource isolated function post data_attributes(create_data_attribute_request payload, CreateDataAttributeHeaders headers = {}) returns data_attribute|error {
        return {"id": 37, "type": "data_attribute", "name": "Mithril Shirt", "full_name": "custom_attributes.Mithril Shirt", "label": "Mithril Shirt", "data_type": "string", "api_writable": true, "ui_writable": false, "messenger_writable": false, "custom": true, "archived": false, "admin_id": "991267686", "created_at": 1719492955, "updated_at": 1719492955, "model": "company"};
    }

    # Cancel content data export
    #
    # + job_identifier - job_identifier
    # + headers - Headers to be sent with the request 
    # + return - successful 
    resource isolated function post export/cancel/[string job_identifier](CancelDataExportHeaders headers = {}) returns data_export|error {
        return {"job_identifier": "pwrbmmimhakvlfsh", "status": "canceled", "download_url": "", "download_expires_at": ""};
    }

    # Create content data export
    #
    # + headers - Headers to be sent with the request 
    # + return - successful 
    resource isolated function post export/content/data(create_data_exports_request payload, CreateDataExportHeaders headers = {}) returns data_export|error {
        return {"job_identifier": "bxe9awlish03jkq8", "status": "pending", "download_url": "", "download_expires_at": ""};
    }

    # Create a collection
    #
    # + headers - Headers to be sent with the request 
    # + return - collection created 
    resource isolated function post help_center/collections(create_collection_request payload, CreateCollectionHeaders headers = {}) returns collection|error {
        return {"id": "165", "workspace_id": "this_is_an_id69_that_should_be_at_least_4", "name": "Thanks for everything", "url": "http://help-center.test/myapp-69/", "order": 1, "created_at": 1719492721, "updated_at": 1719492721, "description": "", "icon": "book-bookmark", "parent_id": null, "help_center_id": 81};
    }

    # Create a message
    #
    # + headers - Headers to be sent with the request 
    # + return - admin message created 
    resource isolated function post messages(create_message_request payload, CreateMessageHeaders headers = {}) returns message|error {
        return {"type": "user_message", "id": "403918316", "created_at": 1719492969, "body": "heyy", "message_type": "inapp", "conversation_id": "476"};
    }

    # Create a news item
    #
    # + headers - Headers to be sent with the request 
    # + return - successful 
    resource isolated function post news/news_items(news_item_request payload, CreateNewsItemHeaders headers = {}) returns news_item|error {
        return {"id": "33", "type": "news-item", "workspace_id": "this_is_an_id498_that_should_be_at_least_", "title": "Halloween is here!", "body": "<p>New costumes in store for this spooky season</p>", "sender_id": 991267734, "state": "live", "labels": ["New", "Product", "Update"], "cover_image_url": null, "reactions": ["😆", "😅"], "deliver_silently": true, "created_at": 1719492978, "updated_at": 1719492978, "newsfeed_assignments": [{"newsfeed_id": 53, "published_at": 1664638214}]};
    }

    # Create a phone Switch
    #
    # + headers - Headers to be sent with the request 
    # + return - successful 
    resource isolated function post phone_call_redirects(create_phone_switch_request payload, CreatePhoneSwitchHeaders headers = {}) returns phone_switch|error {
        return {"url": "http://via.intercom.io/msgr/6eb60123-dadb-4881-80fd-4fc2cf272b12", "type": "phone_call_redirect"};
    }

    # Create or update a tag, Tag or untag companies, Tag contacts
    #
    # + headers - Headers to be sent with the request 
    # + return - Action successful 
    resource isolated function post tags(tags_body payload, CreateTagHeaders headers = {}) returns tag|error {
        return {"type": "tag", "id": "118", "name": "test"};
    }

    # Create a ticket type
    #
    # + headers - Headers to be sent with the request 
    # + return - Ticket type created 
    resource isolated function post ticket_types(create_ticket_type_request payload, CreateTicketTypeHeaders headers = {}) returns ticket_type|error {
        return {"type": "ticket_type", "id": "88", "name": "Customer Issue", "description": "Customer Report Template", "icon": "🎟️", "workspace_id": "this_is_an_id612_that_should_be_at_least_", "archived": false, "created_at": 1719493016, "updated_at": 1719493016, "is_internal": false, "ticket_type_attributes": {"type": "list", "data": [{"type": "ticket_type_attribute", "id": "227", "workspace_id": "this_is_an_id612_that_should_be_at_least_", "name": "_default_title_", "description": "", "data_type": "string", "input_options": {"multiline": false}, "order": 0, "required_to_create": false, "required_to_create_for_contacts": false, "visible_on_create": true, "visible_to_contacts": true, "default": true, "ticket_type_id": 88, "archived": false, "created_at": 1719493016, "updated_at": 1719493016}, {"type": "ticket_type_attribute", "id": "228", "workspace_id": "this_is_an_id612_that_should_be_at_least_", "name": "_default_description_", "description": "", "data_type": "string", "input_options": {"multiline": true}, "order": 1, "required_to_create": false, "required_to_create_for_contacts": false, "visible_on_create": true, "visible_to_contacts": true, "default": true, "ticket_type_id": 88, "archived": false, "created_at": 1719493016, "updated_at": 1719493016}]}, "category": "Customer"};
    }

    # Create a new attribute for a ticket type
    #
    # + ticket_type_id - The unique identifier for the ticket type which is given by Intercom.
    # + headers - Headers to be sent with the request 
    # + return - Ticket Type Attribute created 
    resource isolated function post ticket_types/[string ticket_type_id]/attributes(create_ticket_type_attribute_request payload, CreateTicketTypeAttributeHeaders headers = {}) returns ticket_type_attribute|error {
        return {"type": "ticket_type_attribute", "id": "210", "workspace_id": "this_is_an_id600_that_should_be_at_least_", "name": "Attribute Title", "description": "Attribute Description", "data_type": "string", "input_options": {"multiline": false}, "order": 2, "required_to_create": false, "required_to_create_for_contacts": false, "visible_on_create": true, "visible_to_contacts": true, "default": false, "ticket_type_id": 81, "archived": false, "created_at": 1719493013, "updated_at": 1719493013};
    }

    # Create a ticket
    #
    # + headers - Headers to be sent with the request 
    # + return - Successful response 
    resource isolated function post tickets(create_ticket_request payload, CreateTicketHeaders headers = {}) returns ticket|error {
        return {"type": "ticket", "id": "489", "ticket_id": "48", "ticket_attributes": {"_default_title_": "example", "_default_description_": "there is a problem"}, "ticket_state": "submitted", "ticket_type": {"type": "ticket_type", "id": "106", "name": "my-ticket-type-15", "description": "my ticket type description is awesome.", "icon": "🦁", "workspace_id": "this_is_an_id648_that_should_be_at_least_", "archived": false, "created_at": 1719493047, "updated_at": 1719493047, "is_internal": false, "ticket_type_attributes": {"type": "list", "data": [{"type": "ticket_type_attribute", "id": "252", "workspace_id": "this_is_an_id648_that_should_be_at_least_", "name": "_default_title_", "description": "ola", "data_type": "string", "input_options": null, "order": 0, "required_to_create": true, "required_to_create_for_contacts": false, "visible_on_create": true, "visible_to_contacts": false, "default": false, "ticket_type_id": 106, "archived": false, "created_at": 1719493047, "updated_at": 1719493047}, {"type": "ticket_type_attribute", "id": "253", "workspace_id": "this_is_an_id648_that_should_be_at_least_", "name": "_default_description_", "description": "ola", "data_type": "string", "input_options": null, "order": 0, "required_to_create": true, "required_to_create_for_contacts": false, "visible_on_create": true, "visible_to_contacts": false, "default": false, "ticket_type_id": 106, "archived": false, "created_at": 1719493047, "updated_at": 1719493047}]}, "category": "Back-office"}, "contacts": {"type": "contact.list", "contacts": [{"type": "contact", "id": "667d61b78a68186f43bafe8d", "external_id": "70"}]}, "admin_assignee_id": "0", "team_assignee_id": "0", "created_at": 1719493048, "updated_at": 1719493048, "ticket_parts": {"type": "ticket_part.list", "ticket_parts": [{"type": "ticket_part", "id": "125", "part_type": "ticket_state_updated_by_admin", "ticket_state": "submitted", "previous_ticket_state": "submitted", "created_at": 1719493048, "updated_at": 1719493048, "author": {"id": "991267871", "type": "bot", "name": "Operator", "email": "operator+this_is_an_id648_that_should_be_at_least_@intercom.io"}, "attachments": [], "redacted": false}], "total_count": 1}, "open": true, "linked_objects": {"type": "list", "data": [], "total_count": 0, "has_more": false}, "category": "Back-office", "is_shared": false, "ticket_state_internal_label": "Submitted", "ticket_state_external_label": "Submitted"};
    }

    # Reply to a ticket
    #
    # + headers - Headers to be sent with the request 
    # + return - Admin quick_reply reply 
    resource isolated function post tickets/[string id]/reply(id_reply_body payload, ReplyTicketHeaders headers = {}) returns ticket_reply|error {
        return {"type": "ticket_part", "id": "122", "part_type": "note", "body": "<h2>An Unordered HTML List</h2>\n<ul>\n<li>Coffee</li>\n<li>Tea</li>\n<li>Milk</li>\n</ul>\n<h2>An Ordered HTML List</h2>\n<ol>\n<li>Coffee</li>\n<li>Tea</li>\n<li>Milk</li>\n</ol>", "created_at": 1719493024, "updated_at": 1719493024, "author": {"id": "991267829", "type": "admin", "name": "Ciaran375 Lee", "email": "admin375@email.com"}, "attachments": [], "redacted": false};
    }

    # Add tag to a ticket
    #
    # + ticket_id - ticket_id
    # + headers - Headers to be sent with the request 
    # + return - successful 
    resource isolated function post tickets/[string ticket_id]/tags(ticket_id_tags_body payload, AttachTagToTicketHeaders headers = {}) returns tag|error {
        return {"type": "tag", "id": "134", "name": "Manual tag"};
    }

    # Search tickets
    #
    # + headers - Headers to be sent with the request 
    # + return - successful 
    resource isolated function post tickets/search(search_request payload, SearchTicketsHeaders headers = {}) returns ticket_list|error {
        return {"type": "ticket.list", "pages": {"type": "pages", "page": 1, "per_page": 5, "total_pages": 1}, "total_count": 1, "tickets": [{"type": "ticket", "id": "494", "ticket_id": "53", "ticket_attributes": {"_default_title_": "attribute_value", "_default_description_": null}, "ticket_state": "submitted", "ticket_type": {"type": "ticket_type", "id": "117", "name": "my-ticket-type-26", "description": "my ticket type description is awesome.", "icon": "🦁", "workspace_id": "this_is_an_id667_that_should_be_at_least_", "archived": false, "created_at": 1719493065, "updated_at": 1719493065, "is_internal": false, "ticket_type_attributes": {"type": "list", "data": [{"type": "ticket_type_attribute", "id": "279", "workspace_id": "this_is_an_id667_that_should_be_at_least_", "name": "_default_title_", "description": "ola", "data_type": "string", "input_options": null, "order": 0, "required_to_create": true, "required_to_create_for_contacts": false, "visible_on_create": true, "visible_to_contacts": false, "default": false, "ticket_type_id": 117, "archived": false, "created_at": 1719493065, "updated_at": 1719493065}, {"type": "ticket_type_attribute", "id": "280", "workspace_id": "this_is_an_id667_that_should_be_at_least_", "name": "_default_description_", "description": "ola", "data_type": "string", "input_options": null, "order": 0, "required_to_create": true, "required_to_create_for_contacts": false, "visible_on_create": true, "visible_to_contacts": false, "default": false, "ticket_type_id": 117, "archived": false, "created_at": 1719493065, "updated_at": 1719493065}]}, "category": "Back-office"}, "contacts": {"type": "contact.list", "contacts": [{"type": "contact", "id": "667d61c98a68186f43bafe92", "external_id": "6895b33e-2768-4611-908e-da6632dfc8ea"}]}, "admin_assignee_id": "0", "team_assignee_id": "0", "created_at": 1719493065, "updated_at": 1719493066, "ticket_parts": {"type": "ticket_part.list", "ticket_parts": [{"type": "ticket_part", "id": "135", "part_type": "ticket_state_updated_by_admin", "ticket_state": "submitted", "previous_ticket_state": "submitted", "created_at": 1719493066, "updated_at": 1719493066, "author": {"id": "991267940", "type": "admin", "name": "Ciaran472 Lee", "email": "admin472@email.com"}, "attachments": [], "redacted": false}], "total_count": 1}, "open": true, "linked_objects": {"type": "list", "data": [], "total_count": 0, "has_more": false}, "category": "Back-office", "is_shared": false, "ticket_state_internal_label": "Submitted", "ticket_state_external_label": "Submitted"}]};
    }

    # Convert a visitor
    #
    # + headers - Headers to be sent with the request 
    # + return - successful 
    resource isolated function post visitors/convert(convert_visitor_request payload, ConvertVisitorHeaders headers = {}) returns contact|error {
        return {"type": "contact", "id": "667d61d08a68186f43bafea2", "workspace_id": "this_is_an_id683_that_should_be_at_least_", "external_id": null, "role": "user", "email": "foo@bar.com", "phone": null, "name": null, "avatar": null, "owner_id": null, "social_profiles": {"type": "list", "data": []}, "has_hard_bounced": false, "marked_email_as_spam": false, "unsubscribed_from_emails": false, "created_at": 1719493072, "updated_at": 1719493072, "signed_up_at": 1719493072, "last_seen_at": null, "last_replied_at": null, "last_contacted_at": null, "last_email_opened_at": null, "last_email_clicked_at": null, "language_override": null, "browser": null, "browser_version": null, "browser_language": null, "os": null, "location": {"type": "location", "country": null, "region": null, "city": null, "country_code": null, "continent_code": null}, "android_app_name": null, "android_app_version": null, "android_device": null, "android_os_version": null, "android_sdk_version": null, "android_last_seen_at": null, "ios_app_name": null, "ios_app_version": null, "ios_device": null, "ios_os_version": null, "ios_sdk_version": null, "ios_last_seen_at": null, "custom_attributes": {}, "tags": {"type": "list", "data": [], "url": "/contacts/667d61d08a68186f43bafea2/tags", "total_count": 0, "has_more": false}, "notes": {"type": "list", "data": [], "url": "/contacts/667d61d08a68186f43bafea2/notes", "total_count": 0, "has_more": false}, "companies": {"type": "list", "data": [], "url": "/contacts/667d61d08a68186f43bafea2/companies", "total_count": 0, "has_more": false}, "opted_out_subscription_types": {"type": "list", "data": [], "url": "/contacts/667d61d08a68186f43bafea2/subscriptions", "total_count": 0, "has_more": false}, "opted_in_subscription_types": {"type": "list", "data": [], "url": "/contacts/667d61d08a68186f43bafea2/subscriptions", "total_count": 0, "has_more": false}, "utm_campaign": null, "utm_content": null, "utm_medium": null, "utm_source": null, "utm_term": null, "referrer": null};
    }

    # Set an admin to away
    #
    # + id - The unique identifier of a given admin
    # + headers - Headers to be sent with the request 
    # + return - Successful response 
    resource isolated function put admins/[int id]/away(id_away_body payload, SetAwayAdminHeaders headers = {}) returns admin|error {
        return {"type": "admin", "id": "991267391", "name": "Ciaran2 Lee", "email": "admin2@email.com", "away_mode_enabled": true, "away_mode_reassign": true, "has_inbox_seat": true, "team_ids": []};
    }

    # Update an article
    #
    # + id - The unique identifier for the article which is given by Intercom.
    # + headers - Headers to be sent with the request 
    # + return - successful 
    resource isolated function put articles/[int id](update_article_request payload, UpdateArticleHeaders headers = {}) returns article|error {
        return {"id": "48", "type": "article", "workspace_id": "this_is_an_id49_that_should_be_at_least_4", "parent_id": 151, "parent_type": "collection", "parent_ids": [], "statistics": {"type": "article_statistics", "views": 0, "conversations": 0, "reactions": 0, "happy_reaction_percentage": 0, "neutral_reaction_percentage": 0, "sad_reaction_percentage": 0}, "title": "Christmas is here!", "description": "", "body": "<p class=\"no-margin\">New gifts in store for the jolly season</p>", "author_id": 991267418, "state": "published", "created_at": 1719492714, "updated_at": 1719492714, "url": "http://help-center.test/myapp-49/en/articles/48-christmas-is-here"};
    }

    # Update a company
    #
    # + id - The unique identifier for the company which is given by Intercom
    # + headers - Headers to be sent with the request 
    # + return - Successful 
    resource isolated function put companies/[string id](UpdateCompanyHeaders headers = {}) returns company|error {
        return {"type": "company", "company_id": "1", "id": "667d60828a68186f43bafd3b", "app_id": "this_is_an_id134_that_should_be_at_least_", "name": "company2", "remote_created_at": 1719492738, "created_at": 1719492738, "updated_at": 1719492738, "monthly_spend": 0, "session_count": 0, "user_count": 1, "tags": {"type": "tag.list", "tags": []}, "segments": {"type": "segment.list", "segments": []}, "plan": {}, "custom_attributes": {}};
    }

    # Update a contact
    #
    # + id - id
    # + headers - Headers to be sent with the request 
    # + return - successful 
    resource isolated function put contacts/[string id](contacts_id_body payload, UpdateContactHeaders headers = {}) returns contact|error {
        return {"type": "contact", "id": "667d60a88a68186f43bafdb8", "workspace_id": "this_is_an_id248_that_should_be_at_least_", "external_id": "70", "role": "user", "email": "joebloggs@intercom.io", "phone": null, "name": "joe bloggs", "avatar": null, "owner_id": null, "social_profiles": {"type": "list", "data": []}, "has_hard_bounced": false, "marked_email_as_spam": false, "unsubscribed_from_emails": false, "created_at": 1719492776, "updated_at": 1719492776, "signed_up_at": 1719492776, "last_seen_at": null, "last_replied_at": null, "last_contacted_at": null, "last_email_opened_at": null, "last_email_clicked_at": null, "language_override": null, "browser": null, "browser_version": null, "browser_language": null, "os": null, "location": {"type": "location", "country": null, "region": null, "city": null, "country_code": null, "continent_code": null}, "android_app_name": null, "android_app_version": null, "android_device": null, "android_os_version": null, "android_sdk_version": null, "android_last_seen_at": null, "ios_app_name": null, "ios_app_version": null, "ios_device": null, "ios_os_version": null, "ios_sdk_version": null, "ios_last_seen_at": null, "custom_attributes": {}, "tags": {"type": "list", "data": [], "url": "/contacts/667d60a88a68186f43bafdb8/tags", "total_count": 0, "has_more": false}, "notes": {"type": "list", "data": [], "url": "/contacts/667d60a88a68186f43bafdb8/notes", "total_count": 0, "has_more": false}, "companies": {"type": "list", "data": [], "url": "/contacts/667d60a88a68186f43bafdb8/companies", "total_count": 0, "has_more": false}, "opted_out_subscription_types": {"type": "list", "data": [], "url": "/contacts/667d60a88a68186f43bafdb8/subscriptions", "total_count": 0, "has_more": false}, "opted_in_subscription_types": {"type": "list", "data": [], "url": "/contacts/667d60a88a68186f43bafdb8/subscriptions", "total_count": 0, "has_more": false}, "utm_campaign": null, "utm_content": null, "utm_medium": null, "utm_source": null, "utm_term": null, "referrer": null};
    }

    # Update a conversation
    #
    # + id - The id of the conversation to target
    # + headers - Headers to be sent with the request 
    # + queries - Queries to be sent with the request 
    # + return - conversation found 
    resource isolated function put conversations/[int id](update_conversation_request payload, UpdateConversationHeaders headers = {}, *UpdateConversationQueries queries) returns conversation|error {
        return {"type": "conversation", "id": "371", "created_at": 1719492832, "updated_at": 1719492834, "waiting_since": null, "snoozed_until": null, "source": {"type": "conversation", "id": "403918259", "delivered_as": "admin_initiated", "subject": "", "body": "<p>this is the message body</p>", "author": {"type": "admin", "id": "991267561", "name": "Ciaran157 Lee", "email": "admin157@email.com"}, "attachments": [], "url": null, "redacted": false}, "contacts": {"type": "contact.list", "contacts": [{"type": "contact", "id": "667d60e08a68186f43bafde5", "external_id": "70"}]}, "first_contact_reply": null, "admin_assignee_id": null, "team_assignee_id": null, "open": false, "state": "closed", "read": true, "tags": {"type": "tag.list", "tags": []}, "priority": "not_priority", "sla_applied": null, "statistics": null, "conversation_rating": null, "teammates": null, "title": null, "custom_attributes": {"issue_type": "Billing", "priority": "High"}, "topics": {}, "ticket": null, "linked_objects": {"type": "list", "data": [], "total_count": 0, "has_more": false}, "ai_agent": null, "ai_agent_participated": false, "conversation_parts": {"type": "conversation_part.list", "conversation_parts": [{"type": "conversation_part", "id": "96", "part_type": "conversation_attribute_updated_by_admin", "body": null, "created_at": 1719492834, "updated_at": 1719492834, "notified_at": 1719492834, "assigned_to": null, "author": {"id": "991267562", "type": "bot", "name": "Operator", "email": "operator+this_is_an_id321_that_should_be_at_least_@intercom.io"}, "attachments": [], "external_id": null, "redacted": false}, {"type": "conversation_part", "id": "97", "part_type": "conversation_attribute_updated_by_admin", "body": null, "created_at": 1719492834, "updated_at": 1719492834, "notified_at": 1719492834, "assigned_to": null, "author": {"id": "991267562", "type": "bot", "name": "Operator", "email": "operator+this_is_an_id321_that_should_be_at_least_@intercom.io"}, "attachments": [], "external_id": null, "redacted": false}], "total_count": 2}};
    }

    # Update a data attribute
    #
    # + id - The data attribute id
    # + headers - Headers to be sent with the request 
    # + return - Successful 
    resource isolated function put data_attributes/[int id](update_data_attribute_request payload, UpdateDataAttributeHeaders headers = {}) returns data_attribute|error {
        return {"id": 44, "type": "data_attribute", "name": "The One Ring", "full_name": "custom_attributes.The One Ring", "label": "The One Ring", "description": "Just a plain old ring", "data_type": "string", "options": ["1-10", "11-20"], "api_writable": true, "ui_writable": false, "messenger_writable": true, "custom": true, "archived": false, "admin_id": "991267693", "created_at": 1719492958, "updated_at": 1719492959, "model": "company"};
    }

    # Update a collection
    #
    # + id - The unique identifier for the collection which is given by Intercom.
    # + headers - Headers to be sent with the request 
    # + return - successful 
    resource isolated function put help_center/collections/[int id](update_collection_request payload, UpdateCollectionHeaders headers = {}) returns collection|error {
        return {"id": "176", "workspace_id": "this_is_an_id81_that_should_be_at_least_4", "name": "Update collection name", "url": "http://help-center.test/myapp-81/collection-25", "order": 25, "created_at": 1719492724, "updated_at": 1719492724, "description": "english collection description", "icon": "folder", "parent_id": null, "help_center_id": 87};
    }

    # Update a news item
    #
    # + id - The unique identifier for the news item which is given by Intercom.
    # + headers - Headers to be sent with the request 
    # + return - successful 
    resource isolated function put news/news_items/[int id](news_item_request payload, UpdateNewsItemHeaders headers = {}) returns news_item|error {
        return {"id": "37", "type": "news-item", "workspace_id": "this_is_an_id508_that_should_be_at_least_", "title": "Christmas is here!", "body": "<p>New gifts in store for the jolly season</p>", "sender_id": 991267745, "state": "live", "labels": [], "cover_image_url": null, "reactions": ["😝", "😂"], "deliver_silently": false, "created_at": 1719492982, "updated_at": 1719492982, "newsfeed_assignments": []};
    }

    # Update a ticket type
    #
    # + id - The unique identifier for the ticket type which is given by Intercom.
    # + headers - Headers to be sent with the request 
    # + return - Ticket type updated 
    resource isolated function put ticket_types/[string id](update_ticket_type_request payload, UpdateTicketTypeHeaders headers = {}) returns ticket_type|error {
        return {"type": "ticket_type", "id": "92", "name": "Bug Report 2", "description": "Bug Report Template", "icon": "🎟️", "workspace_id": "this_is_an_id620_that_should_be_at_least_", "archived": false, "created_at": 1719493018, "updated_at": 1719493018, "is_internal": false, "ticket_type_attributes": {"type": "list", "data": [{"type": "ticket_type_attribute", "id": "238", "workspace_id": "this_is_an_id620_that_should_be_at_least_", "name": "_default_title_", "description": "", "data_type": "string", "input_options": {"multiline": false}, "order": 0, "required_to_create": false, "required_to_create_for_contacts": false, "visible_on_create": true, "visible_to_contacts": true, "default": true, "ticket_type_id": 92, "archived": false, "created_at": 1719493018, "updated_at": 1719493018}, {"type": "ticket_type_attribute", "id": "240", "workspace_id": "this_is_an_id620_that_should_be_at_least_", "name": "name", "description": "description", "data_type": "string", "input_options": null, "order": 0, "required_to_create": false, "required_to_create_for_contacts": false, "visible_on_create": false, "visible_to_contacts": false, "default": false, "ticket_type_id": 92, "archived": false, "created_at": 1719493018, "updated_at": 1719493018}, {"type": "ticket_type_attribute", "id": "239", "workspace_id": "this_is_an_id620_that_should_be_at_least_", "name": "_default_description_", "description": "", "data_type": "string", "input_options": {"multiline": true}, "order": 1, "required_to_create": false, "required_to_create_for_contacts": false, "visible_on_create": true, "visible_to_contacts": true, "default": true, "ticket_type_id": 92, "archived": false, "created_at": 1719493018, "updated_at": 1719493018}]}, "category": "Customer"};
    }

    # Update an existing attribute for a ticket type
    #
    # + ticket_type_id - The unique identifier for the ticket type which is given by Intercom.
    # + id - The unique identifier for the ticket type attribute which is given by Intercom.
    # + headers - Headers to be sent with the request 
    # + return - Ticket Type Attribute updated 
    resource isolated function put ticket_types/[string ticket_type_id]/attributes/[string id](update_ticket_type_attribute_request payload, UpdateTicketTypeAttributeHeaders headers = {}) returns ticket_type_attribute|error {
        return {"type": "ticket_type_attribute", "id": "215", "workspace_id": "this_is_an_id604_that_should_be_at_least_", "name": "name", "description": "New Attribute Description", "data_type": "string", "order": 0, "required_to_create": false, "required_to_create_for_contacts": false, "visible_on_create": false, "visible_to_contacts": false, "default": false, "ticket_type_id": 83, "archived": false, "created_at": 1719493013, "updated_at": 1719493014};
    }

    # Update a ticket
    #
    # + id - The unique identifier for the ticket which is given by Intercom
    # + headers - Headers to be sent with the request 
    # + return - Successful response 
    resource isolated function put tickets/[string id](update_ticket_request payload, UpdateTicketHeaders headers = {}) returns ticket|error {
        return {"type": "ticket", "id": "490", "ticket_id": "49", "ticket_attributes": {"_default_title_": "example", "_default_description_": "there is a problem"}, "ticket_state": "in_progress", "ticket_type": {"type": "ticket_type", "id": "108", "name": "my-ticket-type-17", "description": "my ticket type description is awesome.", "icon": "🦁", "workspace_id": "this_is_an_id652_that_should_be_at_least_", "archived": false, "created_at": 1719493050, "updated_at": 1719493050, "is_internal": false, "ticket_type_attributes": {"type": "list", "data": [{"type": "ticket_type_attribute", "id": "257", "workspace_id": "this_is_an_id652_that_should_be_at_least_", "name": "_default_title_", "description": "ola", "data_type": "string", "input_options": null, "order": 0, "required_to_create": true, "required_to_create_for_contacts": false, "visible_on_create": true, "visible_to_contacts": false, "default": false, "ticket_type_id": 108, "archived": false, "created_at": 1719493050, "updated_at": 1719493050}, {"type": "ticket_type_attribute", "id": "258", "workspace_id": "this_is_an_id652_that_should_be_at_least_", "name": "_default_description_", "description": "ola", "data_type": "string", "input_options": null, "order": 0, "required_to_create": true, "required_to_create_for_contacts": false, "visible_on_create": true, "visible_to_contacts": false, "default": false, "ticket_type_id": 108, "archived": false, "created_at": 1719493050, "updated_at": 1719493050}]}, "category": "Back-office"}, "contacts": {"type": "contact.list", "contacts": [{"type": "contact", "id": "667d61bb8a68186f43bafe8e", "external_id": "cd63b6b5-ea75-4ad9-b72c-9d7a647baf08"}]}, "admin_assignee_id": "991267885", "team_assignee_id": "0", "created_at": 1719493051, "updated_at": 1719493054, "ticket_parts": {"type": "ticket_part.list", "ticket_parts": [{"type": "ticket_part", "id": "126", "part_type": "ticket_state_updated_by_admin", "ticket_state": "submitted", "previous_ticket_state": "submitted", "created_at": 1719493051, "updated_at": 1719493051, "author": {"id": "991267883", "type": "admin", "name": "Ciaran419 Lee", "email": "admin419@email.com"}, "attachments": [], "redacted": false}, {"type": "ticket_part", "id": "127", "part_type": "ticket_attribute_updated_by_admin", "created_at": 1719493053, "updated_at": 1719493053, "author": {"id": "991267884", "type": "bot", "name": "Operator", "email": "operator+this_is_an_id652_that_should_be_at_least_@intercom.io"}, "attachments": [], "redacted": false}, {"type": "ticket_part", "id": "128", "part_type": "ticket_attribute_updated_by_admin", "created_at": 1719493053, "updated_at": 1719493053, "author": {"id": "991267884", "type": "bot", "name": "Operator", "email": "operator+this_is_an_id652_that_should_be_at_least_@intercom.io"}, "attachments": [], "redacted": false}, {"type": "ticket_part", "id": "129", "part_type": "ticket_state_updated_by_admin", "ticket_state": "in_progress", "previous_ticket_state": "submitted", "created_at": 1719493053, "updated_at": 1719493053, "author": {"id": "991267884", "type": "bot", "name": "Operator", "email": "operator+this_is_an_id652_that_should_be_at_least_@intercom.io"}, "attachments": [], "redacted": false}, {"type": "ticket_part", "id": "130", "part_type": "assignment", "created_at": 1719493054, "updated_at": 1719493054, "assigned_to": {"type": "admin", "id": "991267885"}, "author": {"id": "991267883", "type": "admin", "name": "Ciaran419 Lee", "email": "admin419@email.com"}, "attachments": [], "redacted": false}, {"type": "ticket_part", "id": "131", "part_type": "snoozed", "created_at": 1719493054, "updated_at": 1719493054, "author": {"id": "991267884", "type": "bot", "name": "Operator", "email": "operator+this_is_an_id652_that_should_be_at_least_@intercom.io"}, "attachments": [], "redacted": false}], "total_count": 6}, "open": true, "snoozed_until": 1719590400, "linked_objects": {"type": "list", "data": [], "total_count": 0, "has_more": false}, "category": "Back-office", "is_shared": false, "ticket_state_internal_label": "In progress", "ticket_state_external_label": "In progress"};
    }

    # Update a visitor
    #
    # + headers - Headers to be sent with the request 
    # + return - successful 
    resource isolated function put visitors(update_visitor_request payload, UpdateVisitorHeaders headers = {}) returns visitor|error {
        return {"type": "visitor", "id": "667d61cc8a68186f43bafe95", "user_id": "3ecf64d0-9ed1-4e9f-88e1-da7d6e6782f3", "anonymous": true, "email": "", "phone": null, "name": "Gareth Bale", "pseudonym": "Indigo Ghost", "avatar": {"type": "avatar", "image_url": "https://static.intercomassets.com/app/pseudonym_avatars_2019/indigo-ghost.png"}, "app_id": "this_is_an_id671_that_should_be_at_least_", "companies": {"type": "company.list", "companies": []}, "location_data": {}, "last_request_at": null, "created_at": 1719493068, "remote_created_at": 1719493068, "signed_up_at": 1719493068, "updated_at": 1719493068, "session_count": 0, "social_profiles": {"type": "social_profile.list", "social_profiles": []}, "owner_id": null, "unsubscribed_from_emails": false, "marked_email_as_spam": false, "has_hard_bounced": false, "tags": {"type": "tag.list", "tags": []}, "segments": {"type": "segment.list", "segments": []}, "custom_attributes": {}, "referrer": null, "utm_campaign": null, "utm_content": null, "utm_medium": null, "utm_source": null, "utm_term": null, "do_not_track": null};
    }
}
